using System.Collections.ObjectModel;

namespace GameOfLife.Model;

public class BrushesRegistry : ObservableObject
{
    private readonly Dictionary<int, int[,]> _brushes = new()
    {
        // 0. Точка (1x1)
        { 0, new int[,] { { 1 } } },

        // 1. Маленький квадрат (3x3)
        { 1, new int[,]
        {
            { 1, 1, 1 },
            { 1, 1, 1 },
            { 1, 1, 1 }
        }},

        // 2. Средний квадрат (5x5)
        { 2, new int[,]
        {
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 }
        }},

        // 3. Крест (5x5)
        { 3, new int[,]
        {
            { 0, 0, 1, 0, 0 },
            { 0, 0, 1, 0, 0 },
            { 1, 1, 1, 1, 1 },
            { 0, 0, 1, 0, 0 },
            { 0, 0, 1, 0, 0 }
        }},

        // 4. Круг (5x5)
        { 4, new int[,]
        {
            { 0, 1, 1, 1, 0 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 0, 1, 1, 1, 0 }
        }},

        // 5. Диагональ (5x5)
        { 5, new int[,]
        {
            { 1, 0, 0, 0, 0 },
            { 0, 1, 0, 0, 0 },
            { 0, 0, 1, 0, 0 },
            { 0, 0, 0, 1, 0 },
            { 0, 0, 0, 0, 1 }
        }},

        // 6. Горизонтальная линия (1x5)
        { 6, new int[,]
        {
            { 1, 1, 1, 1, 1 }
        }},

        // 7. Вертикальная линия (5x1)
        { 7, new int[,]
        {
            { 1 },
            { 1 },
            { 1 },
            { 1 },
            { 1 }
        }},

        // 8. Рамка (5x5)
        { 8, new int[,]
        {
            { 1, 1, 1, 1, 1 },
            { 1, 0, 0, 0, 1 },
            { 1, 0, 0, 0, 1 },
            { 1, 0, 0, 0, 1 },
            { 1, 1, 1, 1, 1 }
        }},

        // 9. Полукруг (5x5)
        { 9, new int[,]
        {
            { 0, 0, 0, 0, 0 },
            { 0, 1, 1, 1, 0 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 0, 1, 1, 1, 0 }
        }},

        // 10. Кольцо (7x7)
        { 10, new int[,]
        {
            { 0, 1, 1, 1, 1, 1, 0 },
            { 1, 1, 0, 0, 0, 1, 1 },
            { 1, 0, 0, 0, 0, 0, 1 },
            { 1, 0, 0, 0, 0, 0, 1 },
            { 1, 0, 0, 0, 0, 0, 1 },
            { 1, 1, 0, 0, 0, 1, 1 },
            { 0, 1, 1, 1, 1, 1, 0 }
        }},

        // 11. Шум (5x5, случайный узор)
        { 11, new int[,]
        {
            { 1, 0, 1, 1, 0 },
            { 0, 1, 0, 1, 1 },
            { 1, 1, 0, 0, 1 },
            { 0, 1, 1, 1, 0 },
            { 1, 0, 1, 0, 1 }
        }},

        // 12. Угол (5x5)
        { 12, new int[,]
        {
            { 1, 1, 1, 1, 1 },
            { 1, 0, 0, 0, 0 },
            { 1, 0, 0, 0, 0 },
            { 1, 0, 0, 0, 0 },
            { 1, 0, 0, 0, 0 }
        }},

        // 13. Плюс (3x3)
        { 13, new int[,]
        {
            { 0, 1, 0 },
            { 1, 1, 1 },
            { 0, 1, 0 }
        }},

        // 14. Большой крест (7x7)
        { 14, new int[,]
        {
            { 0, 0, 0, 1, 0, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1 },
            { 0, 0, 0, 1, 0, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0 }
        }}
    };

    public ObservableCollection<string> BrushNames { get; } =
    [
        "Dot (1x1)",
        "Small Square (3x3)",
        "Medium Square (5x5)",
        "Cross (5x5)",
        "Circle (5x5)",
        "Diagonal (5x5)",
        "Horizontal Line (1x5)",
        "Vertical Line (5x1)",
        "Frame (5x5)",
        "Half Circle (5x5)",
        "Ring (7x7)",
        "Noise (5x5)",
        "Corner (5x5)",
        "Plus (3x3)",
        "Large Cross (7x7)"
    ];

    private int _selectedIndex;
    public int SelectedIndex
    {
        get => _selectedIndex;
        set => Set(ref _selectedIndex, value);
    }

    public int[,] SelectedBrush => _brushes[_selectedIndex];
}
